Description:
    Final Capstone Project for the Udacity Cloud DevOps nanodegree.
    Builds all required infrastructure, EKS cluster and RDS instance
    
Parameters:
    EnvironmentName:
        Description: Name that will be prefixed to resource names
        Type: String

    VpcCIDR:
        Description: VPC IP range
        Type: String
        Default: 172.16.0.0/16

    PublicSubnet1CIDR:
        Description: Public Subnet 1 IP range
        Type: String
        Default: 172.16.33.0/24

    PublicSubnet2CIDR:
        Description: Public Subnet 2 IP range
        Type: String
        Default: 172.16.34.0/24
        
Resources: 
    VPC:
        Type: AWS::EC2::VPC
        Properties: 
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties: 
            Tags: 
                - Key: Name
                  Value: !Ref EnvironmentName

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties: 
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2
          
    # IAM Role needed by the cluster
    ClusterRole:
        Description: Allows EKS to manage clusters on your behalf.
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    Effect: Allow
                    Principal:
                      Service:
                        - eks.amazonaws.com
                    Action: sts:AssumeRole
            ManagedPolicyArns: 
              - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
              - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

    ClusterControlPlaneSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Cluster communication with worker nodes
            VpcId: !Ref VPC

    Cluster:
        Type: "AWS::EKS::Cluster"
        Properties:
            Version: "1.10"
            RoleArn: !GetAtt ClusterRole.Arn
            ResourcesVpcConfig:
                SecurityGroupIds:
                  - !Ref ClusterControlPlaneSecurityGroup
                SubnetIds:
                  - !Ref PublicSubnet1
                  - !Ref PublicSubnet2


Outputs:

    ClusterName:
        Value: !Ref Cluster
        Description: Cluster Name
        Export:
            Name: !Sub ${EnvironmentName}-ClusterName

    ClusterArn:
        Value: !GetAtt Cluster.Arn
        Description: Cluster Arn
        Export:
            Name: !Sub ${EnvironmentName}-ClusterArm

    ClusterEndpoint:
        Value: !GetAtt Cluster.Endpoint
        Description: Cluster Endpoint
        Export:
            Name: !Sub ${EnvironmentName}-ClusterEndpoint

    ClusterControlPlaneSecurityGroup:
        Value: !Ref ClusterControlPlaneSecurityGroup
        Description: ClusterControlPlaneSecurityGroup
        Export:
            Name: !Sub ${EnvironmentName}-ClusterSecurityGroup
        
